services:
  service-app:
    image: 311462405659.dkr.ecr.eu-west-1.amazonaws.com/sirius/scanning/app:latest
    build:
      context: ./service-app
    ports:
      - "8081:8081"
    environment:
      - SIRIUS_BASE_URL=http://sirius-mock:8080
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SECRETS_MANAGER_PREFIX=local/
      - ENVIRONMENT=local
    healthcheck:
      test: wget -O /dev/null -S 'http://localhost:8081/health-check' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 5s
      timeout: 2s
      retries: 5
    depends_on:
      localstack:
        condition: service_healthy
      sirius-mock:
        condition: service_healthy

  service-app-test:
    build:
      context: ./service-app
      dockerfile: Dockerfile.test
    environment:
      - SIRIUS_BASE_URL=http://sirius-mock:8080
      - AWS_ENDPOINT=http://localstack:4566
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - SECRETS_MANAGER_PREFIX=local/
      - ENVIRONMENT=local
    volumes:
      - .:/app
      - ./test-results:/tmp/test-results
    working_dir: /app/service-app
    command: go test -v ./... -covermode=atomic -coverprofile=/tmp/test-results/coverage.out
    depends_on:
      localstack:
        condition: service_healthy

  localstack:
    image: localstack/localstack:4.4
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
      - "./localstack-data:/var/lib/localstack/data"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
      SERVICES: "s3,secretsmanager,sqs,ssm"
      DEBUG: 1
      DATA_DIR: /var/lib/locals
    ports:
      - "4566:4566"
      - "4571:4571"
    healthcheck:
      test: ["CMD", "bash", "/scripts/wait/healthcheck.sh"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  sirius-mock:
    image: outofcoffee/imposter:4.6.8
    volumes:
      - ./docker/sirius:/opt/imposter/config
    healthcheck:
      test: ["CMD", "imposter", "list", "-x"]
      interval: 5s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  go-lint:
    build: docker/go-lint
    working_dir: /go/src/app/service-app
    volumes:
      - ./:/go/src/app
      - ./.cache/golangci-lint/v1.64.5:/root/.cache
    command: golangci-lint run -v --timeout 5m --output.text.path stdout --output.sarif.path /go/src/app/test-results/go-lint.sarif --modules-download-mode=readonly

  gosec:
    image: securego/gosec:latest
    working_dir: /app/service-app
    volumes:
      - .:/app
    command: -exclude-dir=.gocache -fmt=sarif -out=/app/test-results/gosec.sarif -stdout -verbose=text /app/service-app/...

  trivy:
    image: aquasec/trivy:latest
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./.trivy-cache:/root/.cache
      - ./.trivyignore:/.trivyignore
    environment:
      - TRIVY_DB_REPOSITORY=${TRIVY_DB_REPOSITORY}
      - TRIVY_JAVA_DB_REPOSITORY=${TRIVY_JAVA_DB_REPOSITORY}
      - TRIVY_USERNAME=${DOCKER_USERNAME}
      - TRIVY_PASSWORD=${DOCKER_PASSWORD}
